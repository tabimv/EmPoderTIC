@model EmPoderTIC.Models.INFO_PERFIL

@{
    ViewBag.Title = "Completar Perfil";


    // Nuevo Dictionary para almacenar las relaciones entre sedes y escuelas
    Dictionary<string, List<string>> escuelasPorSede = new Dictionary<string, List<string>>
{
    { "Sede San Andrés de Concepción", new List<string> { "Informática y Telecomunicaciones", "Salud" } },
    { "Sede Valparaíso", new List<string> { "Administración y negocios", "Comunicaciónes", "Informática y Telecomunicaciones" } },
    { "Sede Viña del Mar", new List<string> { "Administración y negocios", "Informática y Telecomunicaciones", "Comunicaciónes", "Salud" } }
    // Agrega más sedes y escuelas según sea necesario
};

}

@if (Session["TipoPerfil"] != null && Session["TipoPerfil"].ToString() == "Docente")
{
    Layout = "~/Views/Shared/_LayoutPerfil2.cshtml";
}
else
{
    Layout = "~/Views/Shared/_LayoutGeneral.cshtml";
}


@if (Session["TipoPerfil"] != null && Session["TipoPerfil"].ToString() == "Docente")
{
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@5.2.3/dist/css/bootstrap.min.css">
    <link rel="stylesheet" href="~/Content/css/CRUD_create_edit.css">

    using (Html.BeginForm("CompletaPerfil", "VistaPerfil2", FormMethod.Post))
    {


        <div class="container-formularios">
            <div class="form-container">
                <h2>Completar Perfil</h2>
                <form>
                    @Html.AntiForgeryToken()
                    <div class="form-group">
                        @Html.LabelFor(model => model.sede, "Sede: ", htmlAttributes: new { @class = "control-label col-md-2" })
                        @Html.DropDownListFor(model => model.sede, new SelectList(escuelasPorSede.Keys), "Selecciona una sede", new { @class = "form-control", id = "sedeDropdown" })
                        @Html.ValidationMessageFor(model => model.sede, "", new { @class = "text-danger" })
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.escuela, "Escuela: este campo es opcional", htmlAttributes: new { @class = "control-label col-md-2" })

                        <select id="escuelaDropdown" name="escuela" class="form-control">
                            <option value="">Selecciona una escuela</option>
                        </select>
                    </div>
                    <div class="form-group">
                        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                        <input type="submit" value="Crear" class="btn btn-primary-custom" />
                    </div>
                    <div>
                        <a href="@Url.Action("Perfil")" class="btn-custom">Volver al Perfil</a>
                    </div>
                </form>
            </div>
        </div>
    }

    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery-validate/1.19.3/jquery.validate.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery-validation-unobtrusive/3.2.12/jquery.validate.unobtrusive.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.2.3/dist/js/bootstrap.bundle.min.js"></script>
    <script>
       $(document).ready(function () {
        // Obtener las opciones de escuela según la sede seleccionada
        function obtenerEscuelasPorSede(sede) {
            var escuelas = @Html.Raw(Json.Encode(escuelasPorSede));

            // Limpiar el dropdown de escuela
            $('#escuelaDropdown').empty();

            // Agregar la opción "Selecciona una escuela"
            $('#escuelaDropdown').append($('<option>', {
                value: "",
                text: "Selecciona una escuela"
            }));

            // Agregar las opciones de escuela según la sede seleccionada
            $.each(escuelas[sede], function (index, value) {
                $('#escuelaDropdown').append($('<option>', {
                    value: value,
                    text: value
                }));
            });
        }

        // Asociar el evento change al dropdown de sede
        $('#sedeDropdown').change(function () {
            // Obtener y mostrar las opciones de escuela según la sede seleccionada
            obtenerEscuelasPorSede($(this).val());
        });
    });
    </script>




}

else
{
    <link rel="stylesheet" href="~/Content/css/accesodenegado.css">
    <div id="header">
        <h1> Acceso denegado. Esta vista solo está disponible para Docentes</h1>
        <br />
        <a href="@Url.Action("Login", "Account")" class="btn-acceso">Iniciar Sesión</a>
    </div>
}













