@model EmPoderTIC.Models.USUARIO

@{
    ViewBag.Title = "Registro Usuario";
    Layout = "~/Views/Shared/_LayoutGeneral.cshtml";
}





<link rel="stylesheet" href="~/Content/css/login.css">

<!--========================================
       contenido
    ==========================================-->


<div class="contenedor-login">

    <!--========================================
        Slider
    ==========================================-->
    <div class="contenedor-slider">

        <div class="slider">

            <!-- Slide 1 -->
            <div class="slide fade ">
                <img src="~/Content/img/slider_1.png" alt="">
            </div>

            <!-- Slide 2 -->
            <div class="slide fade">
                <img src="~/Content/img/slider_2.png" alt="">
            </div>


        </div>

        <!-- Botones next y prev -->
        <a href="#" class="prev"><i class="fas fa-chevron-left"></i></a>
        <a href="#" class="next"><i class="fas fa-chevron-right"></i></a>

        <!-- dots -->
        <div class="dots">

            <!-- <span class="dot active"></span> -->

        </div>

    </div>

    <!--========================================
        Formularios
    ==========================================-->
    <div class="contenedor-texto">
        <div class="contenedor-form">
            <h1 class="titulo">¡Bienvenido a EmPoderTIC!</h1>
            <p class="descripcion">Donde Tu Reconocimiento Comienza.</p>


            <!--========================================
                Formulario login
            ==========================================-->
            @using (Html.BeginForm("RegistrarUsuario", "Account", FormMethod.Post, new { onsubmit = "return validarFormulario();" }))
            {
                @Html.AntiForgeryToken()

                <div class="form-group">
                    @Html.LabelFor(model => model.rut, "RUT")
                    @Html.TextBoxFor(model => model.rut, new { @class = "form-control", placeholder = "Rut sin puntos con guión", onchange = "validarRut(this.value)" })
                    @Html.ValidationMessageFor(model => model.rut)
                    <div id="mensajeErrorRut" class="text-danger"></div>

                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.nombre, "Nombre")
                    @Html.TextBoxFor(model => model.nombre, new { @class = "form-control", placeholder = "Primer Nombre" })
                    @Html.ValidationMessageFor(model => model.nombre)
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.apellido_paterno, "Apellido Paterno")
                    @Html.TextBoxFor(model => model.apellido_paterno, new { @class = "form-control", placeholder = "Apellido Paterno" })
                    @Html.ValidationMessageFor(model => model.apellido_paterno)
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.apellido_materno, "Apellido Materno")
                    @Html.TextBoxFor(model => model.apellido_materno, new { @class = "form-control", placeholder = "Apellido Materno" })
                    @Html.ValidationMessageFor(model => model.apellido_materno)
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.correo_electronico, "Correo Electrónico")
                    @Html.TextBoxFor(model => model.correo_electronico, new { @class = "form-control", placeholder = "Username + dominio institucional" })
                    @Html.ValidationMessageFor(model => model.correo_electronico)
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.contraseña, "Contraseña")
                    @Html.PasswordFor(model => model.contraseña, new { @class = "form-control", placeholder = "Contraseña" })
                    @Html.ValidationMessageFor(model => model.contraseña)
                </div>

                <!-- Campo oculto para TIPO_PERFIL_tipo_perfil_id -->
                @Html.HiddenFor(model => model.TIPO_PERFIL_tipo_perfil_id)
                @Html.HiddenFor(model => model.token)
                @Html.HiddenFor(model => model.estado_confirmacion)





                <div class="button-container">
                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                    <button class="btn-registro" type="submit">REGISTRARSE</button>
                </div>
                <br />
                <a href="@Url.Action("Login")" class="link">¿Ya tienes Cuenta? Inicia Sesión</a>




            }
        </div>
    </div>
</div>


<script src="~/Content/js/login_registro.js"></script>
<script>
    function validarRut(rut) {
        rut = rut.replace(".", "").toUpperCase();

        // Validar formato
        if (!rut.match(/^[0-9]{7,8}-[0-9Kk]$/)) {
            mostrarError("Formato de RUT inválido.");
            return false;
        }

        // Validar dígito verificador
        var rutNumerico = parseInt(rut.substring(0, rut.length - 2), 10);
        var dvCalculado = calcularDigitoVerificador(rutNumerico);

        if (dvCalculado !== rut.charAt(rut.length - 1)) {
            mostrarError("El dígito verificador no es válido.");
            return false;
        }

        // Limpiar mensajes de error si el RUT es válido
        limpiarErrores();
        return true;
    }

    function calcularDigitoVerificador(rutNumerico) {
        var m = 0, s = 1;
        while (rutNumerico !== 0) {
            s = (s + rutNumerico % 10 * (9 - m++ % 6)) % 11;
            rutNumerico = Math.floor(rutNumerico / 10);
        }
        return String.fromCharCode((s > 0) ? s + 47 : 75);
    }

    function mostrarError(mensaje) {
        // Muestra el mensaje de error en la vista
        document.getElementById("mensajeErrorRut").innerHTML = mensaje;
    }

    function limpiarErrores() {
        // Limpia los mensajes de error en la vista
        document.getElementById("mensajeErrorRut").innerHTML = "";
    }

    function validarFormulario() {
        var rut = document.getElementById("rut").value;

        // Validar el RUT
        if (!validarRut(rut)) {
            mostrarError("Corrija los errores antes de enviar el formulario.");
            return false; // Evita que se envíe el formulario
        }

        // Limpiar mensajes de error si el RUT es válido
        limpiarErrores();

        // Permitir el envío del formulario
        return true;
    }
</script>

